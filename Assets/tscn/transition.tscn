[gd_scene load_steps=9 format=3 uid="uid://ipsix4gw1vm8"]

[ext_resource type="Texture2D" uid="uid://svwmjm33oagb" path="res://Assets/Images/toadImage.png" id="1_7pqhx"]

[sub_resource type="Shader" id="Shader_ulbqi"]
code = "shader_type canvas_item;

uniform sampler2D mask; 
uniform float scale : hint_range(0.0, 1.0, 0.1);

void vertex() {

}

void fragment() { /// I watched a video on this https://www.youtube.com/watch?v=zwjdy20ArEM&t=9s
	float s = scale * 75.0f;
	int cutoff = int(s * .0005 /250.0f);
	vec2 offset = vec2(0.5, 0.5) *  (1.0 - scale);
	vec4 mask_color = texture(mask, UV * scale + offset);
	COLOR.a = 1.0 - mask_color.a + float(cutoff);
}

//void light() {
	// Called for every pixel for every light affecting the CanvasItem.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_56qye"]
shader = SubResource("Shader_ulbqi")
shader_parameter/scale = 0.0
shader_parameter/mask = ExtResource("1_7pqhx")

[sub_resource type="GDScript" id="GDScript_2vr70"]
script/source = "extends ColorRect

var scene = null

	
func fadeIn(val):
	print(\"fadein\")
	$\".\".visible  = true
	$AnimationPlayer.play(\"FadeToBlack\")
	await get_tree().create_timer(1.2).timeout 
	$\".\".visible  = false
	scene = val
	

	
	

func fadeOut():
	$AnimationPlayer.play(\"FadeToBlack\")
	$\".\".visible  = true
	$AnimationPlayer.play(\"FadeFromBlack\")
	await get_tree().create_timer(1.2).timeout 
	$\".\".visible  = false
	


func _on_animation_player_animation_finished(anim_name):
	print(\"done\")
	get_tree().change_scene_to_packed(scene)
	
"

[sub_resource type="Animation" id="Animation_qcc3l"]
resource_name = "FadeFromBlack"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:material:shader_parameter/scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [1.0, 0.0]
}

[sub_resource type="Animation" id="Animation_yxjh0"]
resource_name = "FadeToBlack"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:material:shader_parameter/scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [0.0, 0.9]
}

[sub_resource type="Animation" id="Animation_q8cdd"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:material:shader_parameter/scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_srrnr"]
_data = {
"FadeFromBlack": SubResource("Animation_qcc3l"),
"FadeToBlack": SubResource("Animation_yxjh0"),
"RESET": SubResource("Animation_q8cdd")
}

[node name="Transition" type="ColorRect"]
material = SubResource("ShaderMaterial_56qye")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0, 0, 0, 1)
script = SubResource("GDScript_2vr70")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_srrnr")
}

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_animation_player_animation_finished"]
